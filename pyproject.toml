[build-system]
requires = ["setuptools>=68", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "python-ecies"
description="ECIES implementation for Python on top of the cryptography library"
authors = [{ name = "Marten Svanfeldt", email = "marten.svanfeldt@actia.se" }]
requires-python = ">=3.10"
dynamic = ["version"]
readme = "README.rst"
license = { file = "LICENSE.txt" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "importlib-metadata",
    "typing-extensions",
    # Add runtime dependencies here
    "cryptography>=42.0"
]

# Enables the usage of setuptools_scm
[tool.setuptools_scm]

[project.optional-dependencies]
lint = [
    "mypy==1.9.0",
    "pytest==7.4.1",
    "types-docutils",
    "types-setuptools",
    "jinja2==3.1.2",
    "ruff==0.3.7",
]
test = [
    "pytest==7.4.1",
    "pytest-randomly==3.15.0",
    "pytest-cov==4.1.0",
    "coverage[toml]==7.3.1",
]
doc = [
    "sphinx==7.2.6",
    "sphinx_rtd_theme==1.3.0",
    "sphinx-autodoc-typehints==2.0.1",
    "pip-licenses==4.3.2",
    "jinja2==3.1.2",
]
build = [
    "build[virtualenv]==1.0.3",
    "twine==5.0",
]
dev = [
    "tox==4.11.1",
    "python-ecies[lint]",
    "python-ecies[test]",
    "python-ecies[doc]",
    "python-ecies[build]",
]
yubihsm = [
    "yubihsm[usb, http]==3.0"
]

[tool.ruff]
line-length = 120
src = ["src"]
extend-exclude = [
    "conf.py",
]
target-version = "py39"
lint.select = ["ALL"]
lint.ignore = [
    "COM812",   # Conflicts with the formatter
    "ISC001",   # Conflicts with the formatter
    "ANN101",   # "missing-type-self"
    "PT001",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT004",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT005",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT023",    # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 60

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101", # Use of `assert` detected
    "D103", # Missing docstring in public function
]
"**/__init__.py" = [
    "F401", # Imported but unused
    "F403", # Wildcard imports
]
"docs/**" = [
    "INP001",   # Requires __init__.py but docs folder is not a package.
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`(https://github.com/astral-sh/ruff/issues/5434)
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
disallow_untyped_defs = true # Functions need to be annotated
warn_unused_ignores = true
exclude = [
    "python-ecies-\\d+", # Ignore temporary folder created by setuptools when building an sdist
    "venv.*/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
addopts = """
    --import-mode=append
    --cov=python_ecies
    --cov-config=pyproject.toml
    --cov-report=
    """

[tool.coverage.paths]
# Maps coverage measured in site-packages to source files in src
source = ["src/", ".tox/*/lib/python*/site-packages/"]

[tool.coverage.html]
directory = "reports/coverage_html"
